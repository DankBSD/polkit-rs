// This file was generated by gir (https://github.com/gtk-rs/gir @ cea2f7c)
// from gir-files (https://github.com/gtk-rs/gir-files @ ???)
// DO NOT EDIT

use glib::translate::*;
use glib::value::FromValue;
use glib::value::FromValueOptional;
use glib::value::SetValue;
use glib::value::Value;
use glib::StaticType;
use glib::Type;
use gobject_sys;
use polkit_sys;

bitflags! {
    pub struct AuthorityFeatures: u32 {
        const NONE = 0;
        const TEMPORARY_AUTHORIZATION = 1;
    }
}

#[doc(hidden)]
impl ToGlib for AuthorityFeatures {
    type GlibType = polkit_sys::PolkitAuthorityFeatures;

    fn to_glib(&self) -> polkit_sys::PolkitAuthorityFeatures {
        self.bits()
    }
}

#[doc(hidden)]
impl FromGlib<polkit_sys::PolkitAuthorityFeatures> for AuthorityFeatures {
    fn from_glib(value: polkit_sys::PolkitAuthorityFeatures) -> AuthorityFeatures {
        AuthorityFeatures::from_bits_truncate(value)
    }
}

impl StaticType for AuthorityFeatures {
    fn static_type() -> Type {
        unsafe { from_glib(polkit_sys::polkit_authority_features_get_type()) }
    }
}

impl<'a> FromValueOptional<'a> for AuthorityFeatures {
    unsafe fn from_value_optional(value: &Value) -> Option<Self> {
        Some(FromValue::from_value(value))
    }
}

impl<'a> FromValue<'a> for AuthorityFeatures {
    unsafe fn from_value(value: &Value) -> Self {
        from_glib(gobject_sys::g_value_get_flags(value.to_glib_none().0))
    }
}

impl SetValue for AuthorityFeatures {
    unsafe fn set_value(value: &mut Value, this: &Self) {
        gobject_sys::g_value_set_flags(value.to_glib_none_mut().0, this.to_glib())
    }
}

bitflags! {
    pub struct CheckAuthorizationFlags: u32 {
        const NONE = 0;
        const ALLOW_USER_INTERACTION = 1;
    }
}

#[doc(hidden)]
impl ToGlib for CheckAuthorizationFlags {
    type GlibType = polkit_sys::PolkitCheckAuthorizationFlags;

    fn to_glib(&self) -> polkit_sys::PolkitCheckAuthorizationFlags {
        self.bits()
    }
}

#[doc(hidden)]
impl FromGlib<polkit_sys::PolkitCheckAuthorizationFlags> for CheckAuthorizationFlags {
    fn from_glib(value: polkit_sys::PolkitCheckAuthorizationFlags) -> CheckAuthorizationFlags {
        CheckAuthorizationFlags::from_bits_truncate(value)
    }
}

impl StaticType for CheckAuthorizationFlags {
    fn static_type() -> Type {
        unsafe { from_glib(polkit_sys::polkit_check_authorization_flags_get_type()) }
    }
}

impl<'a> FromValueOptional<'a> for CheckAuthorizationFlags {
    unsafe fn from_value_optional(value: &Value) -> Option<Self> {
        Some(FromValue::from_value(value))
    }
}

impl<'a> FromValue<'a> for CheckAuthorizationFlags {
    unsafe fn from_value(value: &Value) -> Self {
        from_glib(gobject_sys::g_value_get_flags(value.to_glib_none().0))
    }
}

impl SetValue for CheckAuthorizationFlags {
    unsafe fn set_value(value: &mut Value, this: &Self) {
        gobject_sys::g_value_set_flags(value.to_glib_none_mut().0, this.to_glib())
    }
}

